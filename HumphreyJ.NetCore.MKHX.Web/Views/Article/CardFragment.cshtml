@{
    var data = ViewData["data"] as Dictionary<int, Dictionary<int, ParsedCardData[]>>;
    var keyMask = ViewData["keyMask"] as Dictionary<int, string>;
    var emptyList = new ParsedCardData[] { };

    ViewBag.Title = "卡牌分解等级";

}

<div class="container">

    <h5 class="my-3 d-none d-md-block">@ViewBag.Title</h5>

    <article>

        <header class="my-5">
            <p>此处列出所有可分解、可通过分解获得碎片的卡牌。只能通过活动等非分解途径获得碎片的卡牌不在此列表中。</p>
            <p>根据观察得出的规律，当卡牌分解时，大概遵循以下规律：</p>
            <ol>
                <li>获得的卡牌碎片在当前卡牌对片等级的 ±2 范围内</li>
                <li>获得三种碎片，基数为 20.00、10.00、10.00，并有少量波动</li>
                <li>如果是 15 级的卡牌，基数乘以 2 倍</li>
                <li>数量随机加倍，可能的倍数范围是 0.6 ~ 5 倍，但概率不均等</li>
                <li>最后向下取整得到最终数量</li>
            </ol>
        </header>

        @foreach (var rank in data.Where(m => m.Key > 0).OrderBy(m => m.Key))
        {
            var list01 = rank.Value.ContainsKey(0b01) ? rank.Value[0b01] : emptyList;
            var list11 = rank.Value.ContainsKey(0b11) ? rank.Value[0b11] : emptyList;
            var list10 = rank.Value.ContainsKey(0b10) ? rank.Value[0b10] : emptyList;

            <fieldset class="my-5">
                <h5>分解等级 @(rank.Key)</h5>
                <div class="row">
                    @if (list01.Length > 0)
                    {
                        <div class="col-12">
                            <h6 class="my-2">
                                <span class="badge badge-danger">分</span>
                                只可分解
                            </h6>
                            <div>
                                @foreach (var i in list01.OrderBy(m => m.CardName).OrderBy(m=>m.Color))
                                {
                                    @await Html.PartialAsync("~/Views/Shared/partial/Card.cshtml", i)
                                }
                            </div>
                        </div>
                    }
                    @if (list11.Length > 0)
                    {
                        <div class="col-12">
                            <h6 class="my-2">
                                <span class="badge badge-danger">分</span>
                                <span class="badge badge-success">得</span>
                                可分解、获得
                            </h6>
                            <div>
                                @foreach (var i in list11.OrderBy(m => m.CardName).OrderBy(m => m.Color))
                                {
                                    @await Html.PartialAsync("~/Views/Shared/partial/Card.cshtml", i)
                                }
                            </div>
                        </div>
                    }
                    @if (list10.Length > 0)
                    {
                        <div class="col-12">
                            <h6 class="my-2">
                                <span class="badge badge-success">得</span>
                                只可获得
                            </h6>
                            <div>
                                @foreach (var i in list10.OrderBy(m => m.CardName).OrderBy(m => m.Color))
                                {
                                    @await Html.PartialAsync("~/Views/Shared/partial/Card.cshtml", i)
                                }
                            </div>
                        </div>
                    }
                </div>
            </fieldset>
        }

    </article>

</div>