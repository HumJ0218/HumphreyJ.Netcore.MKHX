@{ ViewBag.Title = "首页";

    var GameDataManager = ViewData["GameDataManager"] as GameDataManager;

    var aDayAgo = DateTime.Now.AddDays(-1);
    var PvCounter = (ViewData["PvCounter"] as IEnumerable<PvCounter>).Where(m => m.Time > aDayAgo).GroupBy(m => m.Type).ToDictionary(m => m.Key, m => m.GroupBy(n => n.Name).ToDictionary(n => n.Key, n => n.Count()));
    var V_Article = ViewData["V_Article"] as IEnumerable<V_Article>;
}

<style>
    .tops .itemlist > * { display:block;text-align:left;}
    .links .btn { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; text-decoration: none; }
        .links .btn:hover { text-decoration: none; }
            .links .btn:hover span:first-child { text-decoration: underline; }
    </style>
<header class="my-5">
    <div class="container">
        <div class="alert alert-info" role="alert">
            <p>这是一个未完成的版本，内容可能会随时更改。</p>
            <p>如果你发现了什么问题，欢迎到 <a href="https://github.com/HumJ0218/HumphreyJ.Netcore.MKHX/issues">报错/反馈</a> 模块进行反馈</p>
        </div>
        @if ((Context.Request.Headers["User-Agent"] + "").ToLower().Contains("edge/"))
        {
            <div class="alert alert-warning" role="alert">
                <p><i class="fa fa-edge"></i> 旧版 Edge 浏览器的请求头不受服务器的支持，<a href="https://github.com/aspnet/Mvc/issues/8396" target="_blank">会返回400异常</a>，建议<a href="https://www.microsoft.com/zh-cn/edge" target="_blank">下载新版 Edge 浏览器</a>。</p>
            </div>
        }
    </div>
</header>
<div class="container links my-5">
    <div class="row">
        <div class="col-12 col-md-7">
            <h6>
                <span>文章</span> 
                <a class="small ml-2" href="/article">所有文章</a>
            </h6>
            <div id="Article">
                @foreach (var i in V_Article.OrderByDescending(m => m.CreateTime).Take(6))
                {
                    <a href="/article/@(i.Id)" class="article-item btn btn-link btn-block text-left"><span class="article-title">@(i.Title)</span><br><span class="article-user small text-muted">@(i.Author)</span><span class="article-time ml-2 small text-muted">@(i.CreateTime.ToString("yyyy年M月d日 H:mm:ss"))</span></a>
                }
            </div>
        </div>
        <div class="col-12 col-md-5">
            <hr class="d-md-none" />
            <h6>
                <span>讨论</span>
                <a class="small ml-2" href="https://github.com/HumJ0218/HumphreyJ.Netcore.MKHX/issues" target="_blank">所有讨论</a>
            </h6>
            <div id="GithubIssue">
                载入中&#x2026;
            </div>
            <script>
                (function ($) {
                    $.post('/getdata/GithubIssue', function (r) {
                        var template = `<a href="#" class="issue-item btn btn-link btn-block text-left"><span class="issue-title"></span><br><span class="issue-user small text-muted"></span><span class="issue-time ml-2 small text-muted"></span></a>`;

                        var html = $('<div></div>');
                        var maxCount = $('#Article>a').length;

                        $(r).find('.js-issue-row').each(function (i, e) {

                            if (i >= maxCount) { 
                                return false;
                            }

                            var li = window.li = $(e);

                            var link = 'https://github.com' + li.find('.h4').attr('href').trim();
                            var title = li.find('.h4').text().trim();
                            var user = li.find('.muted-link').text().trim();
                            var time = new Date(li.find('relative-time').attr('datetime'));
                            user = user == 'HumJ0218' ? '汉弗莱基斯' : user;

                            var a = $(template).attr('target', '_blank').attr('href', link);
                            a.find('.issue-title').text(title);
                            a.find('.issue-user').text(user);
                            a.find('.issue-time').text(time.toLocaleString());

                            a.appendTo(html);
                        });

                        $('#GithubIssue').html(html.html());
                    });
                })(jQuery);
            </script>
        </div>
    </div>
</div>
<div class="container tops my-5">
    <div class="row">
        @if (PvCounter.ContainsKey("card"))
        {
            <div class="col-4">
                <h6>热门卡牌</h6>
                <div class="row">
                    @foreach (var i in PvCounter["card"].OrderByDescending(m => m.Value).Select(m => GameDataManager.CardList.FirstOrDefault(n => n.CardId + "" == m.Key || n.CardName == m.Key)).Where(m => m != null).Take(6))
                    {
                        <div class="col-12 col-lg-6 itemlist">
                            @await Html.PartialAsync("~/Views/Shared/partial/Card.cshtml", i)
                        </div>
                    }
                </div>
            </div>
        }
        @if (PvCounter.ContainsKey("rune"))
        {
            <div class="col-3">
                <h6>热门符文</h6>
                <div class="row">
                    @foreach (var i in PvCounter["rune"].OrderByDescending(m => m.Value).Select(m => GameDataManager.RuneList.FirstOrDefault(n => n.RuneId + "" == m.Key || n.RuneName == m.Key)).Where(m => m != null).Take(6))
                    {
                        <div class="col-12 col-lg-6 itemlist">
                            @await Html.PartialAsync("~/Views/Shared/partial/Rune.cshtml", i)
                        </div>
                    }
                </div>
            </div>
        }
        @if (PvCounter.ContainsKey("skill"))
        {
            <div class="col-5">
                <h6>热门技能</h6>
                <div class="row">
                    @foreach (var i in PvCounter["skill"].OrderByDescending(m => m.Value).Select(m => GameDataManager.SkillList.FirstOrDefault(n => n.Abbreviation == m.Key)).Where(m => m != null).Take(6))
                    {
                        <div class="col-12 col-lg-6 itemlist">
                            @await Html.PartialAsync("~/Views/Shared/partial/SkillAbbr.cshtml", new ParsedSkillData[] { i }.GroupBy(m => m.Abbreviation).First())
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>
@{ 
    new object();
}
